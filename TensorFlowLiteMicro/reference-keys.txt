前言
chap-intro
prerequisite-準備工作
git
make
vmware
事先準備
下載-ubuntu-18.04-iso-image-檔案-電腦需要至少-20gb-以上硬碟空間-預估下載時間-7-分鐘
下載及安裝-vmware-workstation-player-預估下載時間-1-分鐘-操作時間10-分鐘
安裝套件之準備工作-以下步驟-3---7-約需時-30-分鐘
安裝-arm-mbed-os-command-line-編譯程式-mbed-cli
設定-mbed-目錄路徑path
安裝-arm-gcc-compiler-編譯器
下載-tensorflow-lite-for-microcontroller-tflm
下載-stm32-f-系列工具箱
開始執行-tensorflow-lite-for-microcontroller-程式
參考文件
arduinoide
arduino-ide-安裝---方法二-從-makefile-安裝-tensorflowlite
esp-arduino
esp-idf
esp32-cam-硬體簡介
esp-idf-安裝環境設定
chap-hello-world-training
在-google-colab-上建立及訓練-hello_world-的模型
colab-執行-training-程式前的準備工作
colab-執行-train-hello_world-model.ipynb-程式
訓練過程中-學習如何修正及改善模型-並將模型轉換成-tflm-接受的格式
chap-hello-world-inference
disco-f746ng-hello-world
無痛執行在筆電上編譯程式-並下載至-stm32-disco_f746ng
微痛執行在筆電上編譯程式-並下載至-stm32-disco_f746ng
改從-httpsgithub.comtensorflow-官網下載
將-tensorflowlitemicroexampleshello_worlddisco_f746ng-這目錄改名成為-tensorflowlitemicroexampleshello_worldmbed
將-make-後的-mbed.bin-上傳到-disco_f746ng-開發板
痛苦的-debug過程-disco_f746ng-執行-hello_world-當機
arduino-nano33-hello-world
esp32-cam-hello-world
chap-micro-speech-inference
disco-f746ng-micro-speech
無痛執行在筆電上編譯程式-並下載至-stm32-disco_f746ng-1
微痛執行在筆電上編譯程式-並下載至-stm32-disco_f746ng-1
改從-httpsgithub.comtensorflow-官網下載-1
micro-speech-deployment
disco-nano33-micro-speech
chap-micro-speech-training
在-google-colab-上建立及訓練-micro_speech-的模型-原始程式及設定
colab-執行-training-程式前的準備工作-1
colab-執行-train-micro_speech-model.ipynb-程式
將模型上傳至開發板
更換模型---將-colab-訓練結果的-g_model-內容複製貼上到-model.cc
確認-micro_model_settings.cc
確認-command-responder.cc---以-disco_f746ng-為例
接續執行-make-及程式上傳
colab-micro-speech-customization
修改-colab-訓練程式
更換模型---將-colab-訓練結果的-g_model-內容複製貼上到-model.cc-1
修改-micro_model_settings.cc
修改-command_responder.cc
接續執行-make-及程式上傳-1
chap-magic_wand
chap-person-detection
esp32-cam-於-esp-idf-開發環境
esp32-cam-於-arduino-開發環境
appendixa
appendixb
appendixc
