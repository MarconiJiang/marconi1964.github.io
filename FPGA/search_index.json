[["index.html", "FGPA for RISC-V CPU running Linux Chapter 1 前言", " FGPA for RISC-V CPU running Linux Marconi Jiang 2021-06-23 Chapter 1 前言 2021/4/22 特地到新竹參加 FB 臉友盧英嵐在新竹碼農聚會的“經濟實惠的 Linux RISC-V 開發平台, 因為報名在前五名, 還收到一片 QMTECH Altera FPGA Cyclone IV EP4CE15 Development Core Board 當贈品, 開心. 碰過的電子產品多了, 但只有早期的 PLD, 就是沒有玩過 FPGA, 這幾年, 因為機器學習/深度學習的興起, FPGA 當加速器也是個熱門話題, 有人送板子, 可以帶入門, 就開始吧. "],["fpga-hello-world-led.html", "Chapter 2 FPGA 入門 Hello World 程式 - 點亮 LED 2.1 硬體準備 2.2 安裝 intel Altera IDE Quartus 於 Ubuntu 18.04： 2.3 安裝 device : 我們在安裝 Quartus 已經安裝過了, 如果需要重新安裝時, 選擇 Quartus menu Tools - Install devices… 2.4 建立新專案 : Quartus menu 選擇 File - New Project Wizard… 一步步執行 2.5 建立新檔案 : Quartus menu 選擇 File - New… 後, 再選擇 Design Files - VHDL File 點選 OK 即可, 會出現 Vdhl1.vhd 這個檔案, 可以自行改名稱後儲存. 2.6 輸入 VHDL 檔案內容 2.7 VHDL 檔案內容建立完成後, 進入 Quartus menu 的 Processing - Start Compilation 來編譯程式, 編譯結果沒有 error, 但有不少 warning, 不妨礙. 2.8 確認腳位, Quartus menu 選取 Assignment - Pin Planner, 會出現類似下圖, 這次需要設定 Location, 我們這次用到 LED0 跟 PB (push button 按鍵的意思), 需要設定這 2 個 Node 的 location 2.9 再編譯一次, Processing - Start Compilation 2.10 燒錄: Quartus menu 選擇 Tools - Programmer 2.11 Bonus 1 : 轉檔, 從 VHDL 檔案轉成 Verilog 格式, 程式下載點 http://doolittle.icarus.com/~larry/vhd2vl/ 2.12 Bonus 2 : 後來才發現 intel 有個 youtube - How to begin a simple FGPA design 比較完整 (也比較複雜了點, 其實可以省略一些還是可以動作), 我的文章只有文字, 可以配合這 youtube 會更清楚", " Chapter 2 FPGA 入門 Hello World 程式 - 點亮 LED 看到這個網頁似乎是蠻簡單的, 來試試 FPGA 的 Hello World 來點亮 LED - Get Started on FPGA Programming, 照著這個一步步來 (雖然我的板子跟他的不同, 改過去應該不會太難) 2.1 硬體準備 FPGA 開發板 - QMTech Cyclone IV Core board (intel Altera Cyclone IV EP4CE15F23C8N) 的資料 QMTech 官網下載網頁 包含使用說明、線路圖 intel Altera USB Blaster : intel 在併購 Altera 後將這條 cable 改成很普通的名字, 叫做 FPGA download cable USB 轉 TTL RS232 cable 2.2 安裝 intel Altera IDE Quartus 於 Ubuntu 18.04： 原先安裝在 Windows 10, 但是 USB Blaster driver 無法更新, 就放棄, 改裝在 VM 的 Ubuntu 18.04 到 intel Altera 的官網下載 Quartus Prime Lite 免費版 其它版本 (Standard 及 Pro) 都需要付費. 也得先註冊取得帳號、密碼才能下載. 完整版的檔案非常大, 因此我只單獨下載 3 個檔案 Quartus II Software (includes Nios II EDS) ModelSim-Altera Edition (includes Starter Edition) Devices: 一定要安裝至少一個 device family, 我安裝我使用的 Cyclone IV 板子 Arria II device support : Cyclone II, Cyclone III, Cyclone IV device support (includes all variations) Intel® FPGA Software Installation and Licensing 文件 下載後, 執行 ./QuartusLiteSetup-20.1.1.720-linux.run 來安裝 安裝算簡單, 只是要注意 ModelSim 安裝的目錄 (default 是 ～/intelFPGA, 我改成 ~/intelFPGA_lite) 得和 Quartus 的安裝目錄是同一個 (~/intelFPGA_lite) 同時也安裝了 device, Cyclone IV 安裝完畢後, 執行檔位於 ./intelFPGA_lite/20.1/quartus/bin/quartus 下 $ # 執行 Quartus 程式 $ ./intelFPGA_lite/20.1/quartus/bin/quartus 2.2.1 安裝 intel Altera IDE Quartus 設定及遇到的問題 Quartus 一執行時就出現錯誤訊息 Failed to load module “canberra-gtk-module” 根據 Failed to load module “canberra-gtk-module”, 解決方式如下 $ sudo apt install libcanberra-gtk-module libcanberra-gtk3-module $ 執行 Processing - Start Compilation 後, 出現錯誤訊息 Altera Quartus Error (12007): Top-level design entity “……” is undefined: 根據 Stackoverflow - Altera Quartus Error (12007): Top-level design entity “……” is undefined 的第二個答案, 到 menu 的 Assignments - Settings - General - Top-Level Entity - Select Entity 去選取我的 project, 名稱是 MyProj 執行 Processing - Start Compilation 後, 出現錯誤訊息 Can’t launch ModelSim-altera simulation software: 得注意 2 點 參考 intel 文章 “Can’t lunch ModelSim-altera simulation software”, 需要確定以下設定的目錄 Tools - Options - General - EDA Tool Options - ModelSim-Alt… : 我的設定是 /home/ubuntu/intelFPGA_lite/20.1/modelsim_ase/linuxaloem 另外, 我一開始的設定 Assignment - Settings - EDA Tool Settings - EDA tools - Simulation - Run Tool Automatically - [x] Run gate-level simulation automatically after compilation 設成 enable, 把它 disable 後就可以 關於 USB Blaster 的 driver 設定: 在安裝 Quartus 之後, ‘理論上’ USB Blaster 的驅動程式應該已經安裝完成, 而且, 進入 Tools - Programmer - Hardware Setup - Hardware Settings 也可以選得到 USB-Blaster (port 2-2.2), 但是, 在 Programmer - Start 後, Progress 會出現 failed, 安裝以下設定後才能順利運作, 也才發現, 在沒安裝前, Hardware Setup 下的 Hardware Frequency 是空的, 安裝後, 會顯示 6,000,000 Hz. intel FPGA Download Cable / USB Blaster 官網的資料 , 用途不大, 現在已經不再用 USB Blaster 這名詞, 改名為 intel FPGA Download Cable USB Blaster 的 driver 設定: 參考網站文章 Using USB Blaster / USB Blaster II under Linux Driver Setup for Ubuntu : For Ubuntu 12.04/14.04/16.04 create the file /etc/udev/rules.d/51-usbblaster.rules with the following contents: 也適用 Ubuntu 18.04 $ # 建立 /etc 下的檔案需要用 sudo $ sudo vi /etc/udev/rules.d/51-usbblaster.rules # 輸入以下內容 # USB Blaster SUBSYSTEM==&quot;usb&quot;, ENV{DEVTYPE}==&quot;usb_device&quot;, ATTR{idVendor}==&quot;09fb&quot;, ATTR{idProduct}==&quot;6001&quot;, MODE=&quot;0666&quot;, NAME=&quot;bus/usb/$env{BUSNUM}/$env{DEVNUM}&quot;, RUN+=&quot;/bin/chmod 0666 %c&quot; SUBSYSTEM==&quot;usb&quot;, ENV{DEVTYPE}==&quot;usb_device&quot;, ATTR{idVendor}==&quot;09fb&quot;, ATTR{idProduct}==&quot;6002&quot;, MODE=&quot;0666&quot;, NAME=&quot;bus/usb/$env{BUSNUM}/$env{DEVNUM}&quot;, RUN+=&quot;/bin/chmod 0666 %c&quot; SUBSYSTEM==&quot;usb&quot;, ENV{DEVTYPE}==&quot;usb_device&quot;, ATTR{idVendor}==&quot;09fb&quot;, ATTR{idProduct}==&quot;6003&quot;, MODE=&quot;0666&quot;, NAME=&quot;bus/usb/$env{BUSNUM}/$env{DEVNUM}&quot;, RUN+=&quot;/bin/chmod 0666 %c&quot; 2.3 安裝 device : 我們在安裝 Quartus 已經安裝過了, 如果需要重新安裝時, 選擇 Quartus menu Tools - Install devices… 2.4 建立新專案 : Quartus menu 選擇 File - New Project Wizard… 一步步執行 Page 1: On “Directory, Name, Top-Level Entity [Page 1 of 5]”, fill in blanks as the following “What is the working directory for this project” C:/Projects/Altera/MyProj (You have to create the folder before you can select the above folder) “What is the name of this project” MyProj “What is the name of top-level design entity for this project?” MyProj Click on “Next” Page 2: On “Add Files [page 2 of 5]” Click “Next” as we’ll add files later on Page 3: On “Family &amp; Device Settings [Page 3 of 5]” In “Family:” dropdown list, select “Cyclone II” In “Available devices:” table, select “EP2C5T144C8” Click “Next” Page 4: On “EDA Tool Settings [page 4 of 5]” Click “Next” Page 5: On “Summary [page 5 of 5]” Click “Finish” 2.5 建立新檔案 : Quartus menu 選擇 File - New… 後, 再選擇 Design Files - VHDL File 點選 OK 即可, 會出現 Vdhl1.vhd 這個檔案, 可以自行改名稱後儲存. 2.6 輸入 VHDL 檔案內容 -- MyProj &quot;Hello, FPGA&quot; library IEEE; use IEEE.STD_LOGIC_1164.ALL; entity MyProj is Port (PB : in STD_lOGIC; -- pin 144 LED0 : out STD_lOGIC; -- pin 3 LED1 : out STD_lOGIC; -- pin 7 LED2 : out STD_lOGIC); -- pin 9 end MyProj; architecture Behavioral of MyProj is begin LED0 &lt;= PB; end Behavioral; 2.7 VHDL 檔案內容建立完成後, 進入 Quartus menu 的 Processing - Start Compilation 來編譯程式, 編譯結果沒有 error, 但有不少 warning, 不妨礙. 2.8 確認腳位, Quartus menu 選取 Assignment - Pin Planner, 會出現類似下圖, 這次需要設定 Location, 我們這次用到 LED0 跟 PB (push button 按鍵的意思), 需要設定這 2 個 Node 的 location 回去看 步驟 0 的 QMTech 線路圖, 板子上的 LED0 是可以控制的, 接到 E4 腳位 (另一個 LED 是 power 的 LED 無法控制) 板子上有 3 個按鍵, SW1 / SW2 分別接到 KEY0 的 pin W13, 及 KEY1 的 pin Y13, SW3 接到 nCONFIG (待確定是不是 reset 鍵). 我們接到 W13 可以看到下圖的 Location, 我們分別設定 LED0 / PB 到 PIN_E4, PIN_W13 2.9 再編譯一次, Processing - Start Compilation 2.10 燒錄: Quartus menu 選擇 Tools - Programmer 9.1 選擇 Hardware Setup…, 確定 Available hardware items 有找到 USB-Blaster 後, 選取 Close 9.2 選擇 Add Device… 後, 選 Cyclone IV E 的 EP4CE15F23 9.3 選擇 Add File…” 後, 到 output_files 目錄下, 選取 QMTechCycloneIV_EP4CE15F23CBN.sof (或是你設定的名稱) 9.4 記得 下圖中的 Program/Configure 要打勾☑️ 9.5 接著, 按下圖的 Start, 就可以將程式上傳到 QMtech 的開發板, 按開發板上的 SW1, 就可以控制 LED0 的亮或暗 - project 成功 ！ 2.11 Bonus 1 : 轉檔, 從 VHDL 檔案轉成 Verilog 格式, 程式下載點 http://doolittle.icarus.com/~larry/vhd2vl/ # 轉檔 $ tar — extract — file vhd2vl-2.5.tar.gz $ ./vhd2vl MyProj.vhd &gt; MyProj.v # note that Verilog file’s extension is .v 2.12 Bonus 2 : 後來才發現 intel 有個 youtube - How to begin a simple FGPA design 比較完整 (也比較複雜了點, 其實可以省略一些還是可以動作), 我的文章只有文字, 可以配合這 youtube 會更清楚 "],["references-.html", "References 參考文獻", " References 參考文獻 參考資料 1. 說明文件 - "],["appendixa.html", "A Appendix A", " A Appendix A "],["appendixb.html", "B Appendix B", " B Appendix B "]]
