[["index.html", "Edge Impulse examples Chapter 1 前言", " Edge Impulse examples marconi1964@yahoo.com or marconi.jiang@gmail.com 2021-06-16 Chapter 1 前言 本書紀錄 Edge Impulse 的一些實驗 從認識 TinyML 與 TensorFlow Lite Micro 以來, 一直都會提到 Edge Impulse, 一直都不清楚 Edge Impulse 在 TinyML 扮演的角色, 只知道創辦人也是早期在 Google 跟 Pete Warden 一起開發 TensorFlow Lite Micro. 乾脆動手做 Edge Impulse 的實驗, 就可以知道了. 因此, 拿了 Arduino Nano 33 BLE Sense, 在 Edge Impulse 做了語音關鍵字偵測的實驗, 當作第一章. "],["edge-impulse-.html", "Chapter 2 Edge Impulse 語音關鍵字偵測範例 2.1 Installing dependencies 安裝套件 2.2 Arduino Nano 33 連接上 Edge Impulse 2.3 到 Edge Impulse Studio 網頁做訓練 2.4 到 Arduino IDE 下載程式到 Nano 33 BLE Sense 執行語音關鍵字偵測 2.5 修改 Nano 33 BLE Sense 控制線路, 增加按鍵作為辨識的開始, 用板上 LED 表示狀態", " Chapter 2 Edge Impulse 語音關鍵字偵測範例 本文是用 Arduino Nano 33 BLE Sense 實現 Edge Impulse 的 TinyML 語音關鍵字偵測範例 參考 Edge Impulse 文件 Edge Impulse - Docs - Arduino Nano 33 需要在 Edge Impulse Studio 註冊建立帳號 我的 Edge Impulse project - Edge Impulse Studio, 需要記住註冊的 email 位址跟密碼 2.1 Installing dependencies 安裝套件 在 Arduino Nano 33 上執行 Edge Impulse, 需要安裝以下軟體: (我使用的 Ubuntu 18.04 當開發環境, 在 Windows 10 的 VMWare Player 下執行) 2.1.1 安裝 Edge Impulse CLI 安裝 Python 3 安裝 Node.js v14 或更新版 $ curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - $ sudo apt-get install -y nodejs $ node -v # 確定 node 的版本是否 v14 以上 $ mkdir ~/.npm-global $ npm config set prefix &#39;~/.npm-global&#39; $ echo &#39;export PATH=~/.npm-global/bin:$PATH&#39; &gt;&gt; ~/.profile $ source ~/.profile 安裝 Edge Impulse 的 CLI $ npm install -g edge-impulse-cli $ 安裝 edge-impulse-cli 後, 它有 7 個工具包, 我們只會用到(紅字圈選的) 2 個 edge-impulse-daemon - configures devices over serial, and acts as a proxy for devices that do not have an IP connection. edge-impulse-uploader - allows uploading and signing local files. edge-impulse-data-forwarder - a very easy way to collect data from any device over a serial connection, and forward the data to Edge Impulse. edge-impulse-run-impulse - show the impulse running on your device. edge-impulse-blocks - create organizational transformation blocks. eta-flash-tool - to flash the Eta Compute ECM3532 AI Sensor. himax-flash-tool - to flash the Himax WE-I Plus. 2.1.2 安裝 Arduino CLI brew 是 Ubuntu 預設的安裝套件, 可以直接執行 $ brew update $ brew install arduino-cli 2.1.3 安裝 GNU Screen: $ sudo apt install screen. $ 2.2 Arduino Nano 33 連接上 Edge Impulse 2.2.1 透過 USB 將 Nano 33 連上電腦 也許需要連按 RESET button 兩次, 來更新 Arduino Nano 33 BLE 的 bootloader. RESET 按鍵位於靠近 Nano 33 板子位於 Micro USB 接頭的後方白色按鈕. 連按 2 次後, 除了原有的 Micro USB 左邊的綠色 LED 會亮外, 右邊的橙色 LED 會慢閃. 2.2.2 更新韌體 (firmware) 下載 Download the latest Edge Impulse firmware, 並解壓縮 打開解壓縮後的目錄 裡面包含 Edge Impulse 提供的 Nano 33 firmware外, 還包含上傳程式, 有 Windows, Linux, MacOS 三個版本都有 Windows: C:\\Users\\marconi\\Downloads\\EdgeImpulse&gt; flash_windows.bat MacOS: $ ./flash_mac.command Linux: $ ./flash_linux.sh 執行上傳程式後, 再按一次 (不是 2 次) RESET button, 開始執行 Nano 33 新的 firmware 2.2.3 將 Nano 33 (透過 USB 連上電腦) 連接上 Edge Impulse 網頁 到 Terminal (MacOS 或 Linux) 下執行以下指令, 此時, 電腦會要求輸入你在 Edge Impulse 註冊的 email 位址及密碼 (如果還沒有註冊, 就先到 我的 Edge Impulse project - Edge Impulse Studio 上註冊) $ edge-impulse-daemon # 如果需要改用不同的 Edge Impulse 用戶, 需要加 --clean 選項 $ edge-impulse-daemon --clean 2.2.4 到 Edge Impulse 網頁確認連結成功 到 我的 Edge Impulse project - Edge Impulse Studio, 在左邊的選單選取 “Devices” 查看是否有 Nano 33 這個裝置, 而且燈號亮綠燈, 如果是亮紅燈, 表示連接有問題. 再回頭到 Terminal 看 edge-impulse-daemon 是否正確執行 2.3 到 Edge Impulse Studio 網頁做訓練 Edge Impulse 網頁 - 語音辨識 說明的蠻清楚 訓練的結果還不錯, 但 validation 的結果就不是太好, 留待後續改善的空間 訓練結果 測試結果 到了最後的 build 時, 可以選擇 Arduino Library 再到 Arduino IDE 去執行, 或是直接選擇 Arduino Nano 33 BLE Sense 用電腦來控制執行, 留待下一章節再說 2.4 到 Arduino IDE 下載程式到 Nano 33 BLE Sense 執行語音關鍵字偵測 Edge Impulse 到了最後的 build 時, 可以選擇 Arduino library 再到 Arduino IDE 去執行, 或是選擇 Arduino Nano 33 BLE Sense 用電腦來控制執行, 後者作法較為簡單, 我們先介紹 2.4.1 Build 時, 選擇 Arduino Nano 33 BLE Sense 用電腦來控制 選擇 Arduino Nano 33 BLE Sense 作 Build 後, 網頁在 build model 完成後, 會要求下載一個 zip 檔案, 下載完成, 解壓縮後, 會有 4 個檔案, 執行 flash_linux.sh, 將 firmware 更新到 Nano 33 上, 再執行 edge-impulse-run-impulse 即可以 Edge Impulse 在 Nano 33 上的語音關鍵字偵測. $ $ ls firmware.ino.bin flash_linux.sh flash_mac.command flash_windows.bat $ ./flash_linux.sh FInding Arduino Mbed core... Finding Arduino Mbed OK Finding Arduino Nano 33 BLE... Finding Arduino Nano 33 BLE OK ... [=======================] 100% (77/77 pages) Done in 12.201 seconds Flashed your Arduino Nano 33 BLE development board. To set up your development with Edge Impulse, run &#39;edge-impulse-deamon&#39; To run your impulse on your development board, run &#39;edge-impulse-run-impulse&#39; $ edge-impulse-run-impulse 2.4.2 Build 時, 選擇 Arduino Libiary, 用 Arduino IDE 來執行 選擇 Arduino library 作 Build 後, 網頁在 build model 完成後, 會要求下載一個 zip 檔案, 下載完成, 但不要解壓縮. 下載完成時, 螢幕也提供接下來的作法 接下來, 開啟 Arduino IDE, 到 Sketch - include Library - Add .ZIP Library 去選取下載的檔案 再到 File - Examples 的最下方選取 nano_ble33_sense_microphone 範例程式, 就可以執行語音關鍵字偵測 2.5 修改 Nano 33 BLE Sense 控制線路, 增加按鍵作為辨識的開始, 用板上 LED 表示狀態 Edge Impulse 的語音關鍵字偵測程式以無限循環的方式進行, 常常不知道何時開始辨識, 加上個按鍵來控制, 作為辨識的開始應該是個不錯的作法. 這在 Arduino 是個標準作法, 網路上都可以找得到, 只是需要注意這還是有幾種接法, 不同的接法, 程式的寫法也不同, 我用的是 pull-up 電阻的作法 (電子業界大多採取這種省電的作法), 因此, 當按鍵沒按時是 ‘1,’ 按下時是 ‘0.’ 麵包板及線路圖 實作 Nano 33 BLE Sense 上有 3 個 LED (紅/綠/藍) 供使用者操作, 就利用這來表示目前程式的狀態 綠燈亮: 表示可以開始執行, 這時候, 按下按鍵就可以進行辨識 紅燈亮: 表示進行語音讀取, 儲存, 以及辨識進行中 藍燈亮: 我讓 Nano 每次執行完, 亮藍燈, 先暫停 3 秒, 結束後, 回到綠燈, 繼續執行 我的 Arduino 程式儲存在 github - Arduino Nano 33 BLE Sense with Edge Impulse Speech Recognition 用於辨識 4 個關鍵字 ‘前進’ - label 是 ‘forward’ ‘右’ - label 是 ‘Right’ ‘左’ - label 是 ‘Left’ ‘停’ - label 是 ’Stop’ "],["-performance-.html", "Chapter 3 比較語音關鍵字偵測的 performance 差異", " Chapter 3 比較語音關鍵字偵測的 performance 差異 上一章節裡面, 介紹了語音關鍵字偵測, 來偵測 right, left, forward, stop 這 4 個字. 可是有時候, 偵測的結果不盡滿意, 後來找到另一個硬體 Seeed Studio 的 Wio Terminal, 它的語音偵測恰好也是用 Arduino IDE 跟 Nano 33 BLE Sense 同一套應用軟體, 激起把這 2 套硬體的語音偵測結果來做個比較的想法. 開發板 CPU CPU core CPU 速度 ROM RAM Arduino Nano Nordic nRF52840 ARM Cortex-M4 64MHz 1MB 256KB Wio Terminal Microchip ATSAMD51P19 ARM Cortex-M4F* 120MHz 4MB 192KB Remark * M4F 含 FPU (浮點運算單元) 既然是比較硬體的 performance, 就盡量用同一套應用程式, 所以, 就決定用 Wio Terminal 的方式, 完全透過 Edge Impulse 的作法, Wio terminal 有個 colab 的 ipynb 程式, 會將資料上傳到 Edge Impulse, 透過 Edge Impulse 訓練後, 結果是產生直接給 Arduino IDE 操作的 .zip 檔案. Arduino Nano 33 BLE Sense 跟 Wio Terminal 都是用同一個 .zip 檔在 Arduino IDE 上執行. 唯一的差別在於 Wio Terminal 的麥克風擷取程式需要修改, 我用的是 Wio Terminal 官方提供的版本, 相對於 Arduino Nano 33 BLE Sense 用的是 Edge Impulse 提供的版本, 看起來 Wio Terminal 除了修改麥克風擷取程式之外, 主程式也做了部份修改, 造成彼此在辨識結果也有差別. 為了避免每次發音不同造成的結果差異, 同時將 Arduino Nano 33 BLE Sense 跟 Wio Terminal 同時接到不同筆電 (PC 跟 Mac) 來做測試, 也交換筆電來看不同組合下是否有不同結果. 各以 3 次的測試結果避免單次誤差. 組合 開發板組合 Right Left Forward Stop 1 Nano + Mac 0.93/0.83/0.87 0.86/0.77/0.97 0.81/0.91/0.93 0.99/0.99/0.99 1 Wio + PC 0.68/0.76/0.60 0.97/0.81/0.59 0.88/0.92/0.91 0.82/0.92/0.83 2 Nano + PC 0.03/0.50/0.37 0.82/0.86/0.74 0.91/0.91/0.71 0.44/0.99/0.66 2 Wio + Mac 0.16/0.58/0.63 0.77/0.66/0.79 0.96/0.89/0.89 0.97/0.97/0.77 Right 單字的辨識率似乎對 Nano 跟 Wio 都有難度, 但是, Nano 還是有可能辨識率達 93%. 雖然 Wio Terminal 辨識的頻率比較高, 列出其中各一段相同時間內的辨識結果, Nano 在這段時間內辨識了 9 次, 而 Wio Terminal 辨識了 24 次, 但無法得出 Wio Terminal 辨識率比較高的結論. 所以, 模型決定了辨識的結果, CPU 速度能增加辨識的頻率, 對 1 秒內的語音辨識, Arduino Nano 33 BLE Sense 的 64MHz Arm M4 CPU 已經足夠。 3.0.1 Arduino Nano 33 BLE Sense 辨識結果 - 3 15:53:28.881 -&gt; Predictions (DSP: 90 ms., Classification: 7 ms., Anomaly: 0 ms.): 15:53:28.881 -&gt; _noise: 0.00000 15:53:28.881 -&gt; _unknown: 0.07422 15:53:28.881 -&gt; forward: 0.00391 15:53:28.881 -&gt; left: 0.05078 15:53:28.881 -&gt; right: 0.87109 15:53:28.881 -&gt; stop: 0.00000 15:53:29.893 -&gt; Predictions (DSP: 90 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:29.893 -&gt; _noise: 0.88281 15:53:29.893 -&gt; _unknown: 0.01562 15:53:29.893 -&gt; forward: 0.00000 15:53:29.893 -&gt; left: 0.00781 15:53:29.893 -&gt; right: 0.01562 15:53:29.893 -&gt; stop: 0.07422 15:53:30.890 -&gt; Predictions (DSP: 90 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:30.890 -&gt; _noise: 0.71094 15:53:30.890 -&gt; _unknown: 0.06250 15:53:30.890 -&gt; forward: 0.00391 15:53:30.890 -&gt; left: 0.05078 15:53:30.890 -&gt; right: 0.04297 15:53:30.890 -&gt; stop: 0.12891 15:53:31.872 -&gt; Predictions (DSP: 91 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:31.872 -&gt; _noise: 0.00000 15:53:31.872 -&gt; _unknown: 0.01172 15:53:31.872 -&gt; forward: 0.00000 15:53:31.872 -&gt; left: 0.97656 15:53:31.872 -&gt; right: 0.01172 15:53:31.872 -&gt; stop: 0.00000 15:53:32.880 -&gt; Predictions (DSP: 91 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:32.880 -&gt; _noise: 0.78906 15:53:32.880 -&gt; _unknown: 0.06641 15:53:32.880 -&gt; forward: 0.01172 15:53:32.880 -&gt; left: 0.02734 15:53:32.880 -&gt; right: 0.00781 15:53:32.880 -&gt; stop: 0.09766 15:53:33.893 -&gt; Predictions (DSP: 90 ms., Classification: 7 ms., Anomaly: 0 ms.): 15:53:33.893 -&gt; _noise: 0.00000 15:53:33.893 -&gt; _unknown: 0.02734 15:53:33.893 -&gt; forward: 0.93359 15:53:33.893 -&gt; left: 0.01172 15:53:33.893 -&gt; right: 0.02734 15:53:33.893 -&gt; stop: 0.00000 15:53:34.866 -&gt; Predictions (DSP: 90 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:34.866 -&gt; _noise: 0.11328 15:53:34.866 -&gt; _unknown: 0.29297 15:53:34.866 -&gt; forward: 0.00391 15:53:34.866 -&gt; left: 0.51172 15:53:34.866 -&gt; right: 0.01562 15:53:34.866 -&gt; stop: 0.06250 15:53:35.878 -&gt; Predictions (DSP: 91 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:35.878 -&gt; _noise: 0.88672 15:53:35.878 -&gt; _unknown: 0.03125 15:53:35.878 -&gt; forward: 0.00000 15:53:35.878 -&gt; left: 0.02344 15:53:35.878 -&gt; right: 0.00781 15:53:35.878 -&gt; stop: 0.05078 15:53:36.887 -&gt; Predictions (DSP: 91 ms., Classification: 6 ms., Anomaly: 0 ms.): 15:53:36.887 -&gt; _noise: 0.00000 15:53:36.887 -&gt; _unknown: 0.00391 15:53:36.887 -&gt; forward: 0.00000 15:53:36.887 -&gt; left: 0.00000 15:53:36.887 -&gt; right: 0.00000 15:53:36.887 -&gt; stop: 0.99609 3.0.2 Wio Terminal 辨識結果 - 3 15:53:28.722 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:28.722 -&gt; _noise: 0.00000 15:53:28.722 -&gt; _unknown: 0.19531 15:53:28.722 -&gt; forward: 0.00781 15:53:28.722 -&gt; left: 0.60156 15:53:28.722 -&gt; right: 0.16016 15:53:28.722 -&gt; stop: 0.03516 15:53:29.117 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:29.117 -&gt; _noise: 0.00000 15:53:29.117 -&gt; _unknown: 0.41016 15:53:29.117 -&gt; forward: 0.00000 15:53:29.117 -&gt; left: 0.33984 15:53:29.117 -&gt; right: 0.19141 15:53:29.117 -&gt; stop: 0.06250 15:53:29.515 -&gt; Predictions (DSP: 196 ms, NN: 16 ms) 15:53:29.515 -&gt; _noise: 0.69141 15:53:29.515 -&gt; _unknown: 0.05078 15:53:29.515 -&gt; forward: 0.00391 15:53:29.515 -&gt; left: 0.02734 15:53:29.515 -&gt; right: 0.00781 15:53:29.515 -&gt; stop: 0.22266 15:53:29.911 -&gt; Predictions (DSP: 207 ms, NN: 15 ms) 15:53:29.911 -&gt; _noise: 0.98828 15:53:29.911 -&gt; _unknown: 0.00000 15:53:29.911 -&gt; forward: 0.00000 15:53:29.911 -&gt; left: 0.00000 15:53:29.911 -&gt; right: 0.00000 15:53:29.911 -&gt; stop: 0.00781 15:53:30.198 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:30.198 -&gt; _noise: 0.87109 15:53:30.198 -&gt; _unknown: 0.05078 15:53:30.198 -&gt; forward: 0.01172 15:53:30.198 -&gt; left: 0.00781 15:53:30.198 -&gt; right: 0.01172 15:53:30.198 -&gt; stop: 0.04297 15:53:30.485 -&gt; Predictions (DSP: 196 ms, NN: 16 ms) 15:53:30.485 -&gt; _noise: 0.88672 15:53:30.485 -&gt; _unknown: 0.04297 15:53:30.485 -&gt; forward: 0.01562 15:53:30.485 -&gt; left: 0.02344 15:53:30.485 -&gt; right: 0.01172 15:53:30.485 -&gt; stop: 0.01953 15:53:30.917 -&gt; Predictions (DSP: 207 ms, NN: 16 ms) 15:53:30.917 -&gt; _noise: 0.85547 15:53:30.917 -&gt; _unknown: 0.05078 15:53:30.917 -&gt; forward: 0.00391 15:53:30.917 -&gt; left: 0.01562 15:53:30.917 -&gt; right: 0.00000 15:53:30.917 -&gt; stop: 0.07422 15:53:31.209 -&gt; Predictions (DSP: 207 ms, NN: 15 ms) 15:53:31.209 -&gt; _noise: 0.00000 15:53:31.209 -&gt; _unknown: 0.37500 15:53:31.209 -&gt; forward: 0.04688 15:53:31.209 -&gt; left: 0.37500 15:53:31.209 -&gt; right: 0.05859 15:53:31.209 -&gt; stop: 0.14453 15:53:31.603 -&gt; Predictions (DSP: 196 ms, NN: 16 ms) 15:53:31.603 -&gt; _noise: 0.00000 15:53:31.603 -&gt; _unknown: 0.23047 15:53:31.603 -&gt; forward: 0.00391 15:53:31.603 -&gt; left: 0.59375 15:53:31.603 -&gt; right: 0.04297 15:53:31.603 -&gt; stop: 0.13281 15:53:32.107 -&gt; Predictions (DSP: 207 ms, NN: 15 ms) 15:53:32.107 -&gt; _noise: 0.00000 15:53:32.107 -&gt; _unknown: 0.64453 15:53:32.107 -&gt; forward: 0.00000 15:53:32.107 -&gt; left: 0.06641 15:53:32.107 -&gt; right: 0.03906 15:53:32.107 -&gt; stop: 0.25000 15:53:32.395 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:32.395 -&gt; _noise: 0.74219 15:53:32.395 -&gt; _unknown: 0.00781 15:53:32.395 -&gt; forward: 0.00000 15:53:32.395 -&gt; left: 0.00391 15:53:32.395 -&gt; right: 0.00391 15:53:32.395 -&gt; stop: 0.23828 15:53:32.683 -&gt; Predictions (DSP: 196 ms, NN: 16 ms) 15:53:32.683 -&gt; _noise: 0.97656 15:53:32.683 -&gt; _unknown: 0.00781 15:53:32.683 -&gt; forward: 0.00000 15:53:32.683 -&gt; left: 0.00781 15:53:32.683 -&gt; right: 0.00391 15:53:32.683 -&gt; stop: 0.00781 15:53:33.114 -&gt; Predictions (DSP: 207 ms, NN: 16 ms) 15:53:33.114 -&gt; _noise: 0.98828 15:53:33.114 -&gt; _unknown: 0.00391 15:53:33.114 -&gt; forward: 0.00000 15:53:33.114 -&gt; left: 0.00391 15:53:33.114 -&gt; right: 0.00391 15:53:33.114 -&gt; stop: 0.00391 15:53:33.401 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:33.401 -&gt; _noise: 0.00781 15:53:33.401 -&gt; _unknown: 0.18750 15:53:33.401 -&gt; forward: 0.39844 15:53:33.401 -&gt; left: 0.18750 15:53:33.401 -&gt; right: 0.05859 15:53:33.401 -&gt; stop: 0.15625 15:53:33.835 -&gt; Predictions (DSP: 196 ms, NN: 16 ms) 15:53:33.835 -&gt; _noise: 0.00000 15:53:33.835 -&gt; _unknown: 0.05469 15:53:33.835 -&gt; forward: 0.91797 15:53:33.835 -&gt; left: 0.01172 15:53:33.835 -&gt; right: 0.00781 15:53:33.835 -&gt; stop: 0.01172 15:53:34.194 -&gt; Predictions (DSP: 207 ms, NN: 15 ms) 15:53:34.194 -&gt; _noise: 0.00000 15:53:34.194 -&gt; _unknown: 0.14844 15:53:34.194 -&gt; forward: 0.80859 15:53:34.194 -&gt; left: 0.00781 15:53:34.194 -&gt; right: 0.00781 15:53:34.194 -&gt; stop: 0.03125 15:53:34.487 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:34.487 -&gt; _noise: 0.00000 15:53:34.487 -&gt; _unknown: 0.16406 15:53:34.487 -&gt; forward: 0.75000 15:53:34.487 -&gt; left: 0.00781 15:53:34.487 -&gt; right: 0.06250 15:53:34.487 -&gt; stop: 0.00781 15:53:34.884 -&gt; Predictions (DSP: 195 ms, NN: 15 ms) 15:53:34.884 -&gt; _noise: 0.93750 15:53:34.884 -&gt; _unknown: 0.02734 15:53:34.884 -&gt; forward: 0.00391 15:53:34.884 -&gt; left: 0.01953 15:53:34.884 -&gt; right: 0.00391 15:53:34.884 -&gt; stop: 0.01172 15:53:35.316 -&gt; Predictions (DSP: 207 ms, NN: 15 ms) 15:53:35.316 -&gt; _noise: 0.86328 15:53:35.316 -&gt; _unknown: 0.05078 15:53:35.316 -&gt; forward: 0.01172 15:53:35.316 -&gt; left: 0.01172 15:53:35.316 -&gt; right: 0.00781 15:53:35.316 -&gt; stop: 0.05078 15:53:35.606 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:35.606 -&gt; _noise: 0.73828 15:53:35.606 -&gt; _unknown: 0.06250 15:53:35.606 -&gt; forward: 0.04297 15:53:35.606 -&gt; left: 0.03125 15:53:35.606 -&gt; right: 0.01562 15:53:35.606 -&gt; stop: 0.11328 15:53:35.894 -&gt; Predictions (DSP: 195 ms, NN: 15 ms) 15:53:35.894 -&gt; _noise: 0.94141 15:53:35.894 -&gt; _unknown: 0.01172 15:53:35.894 -&gt; forward: 0.00000 15:53:35.894 -&gt; left: 0.01953 15:53:35.894 -&gt; right: 0.00781 15:53:35.894 -&gt; stop: 0.02344 15:53:36.290 -&gt; Predictions (DSP: 207 ms, NN: 15 ms) 15:53:36.290 -&gt; _noise: 0.00000 15:53:36.290 -&gt; _unknown: 0.17188 15:53:36.290 -&gt; forward: 0.00391 15:53:36.290 -&gt; left: 0.04688 15:53:36.290 -&gt; right: 0.00391 15:53:36.290 -&gt; stop: 0.77344 15:53:36.722 -&gt; Predictions (DSP: 206 ms, NN: 15 ms) 15:53:36.722 -&gt; _noise: 0.00000 15:53:36.722 -&gt; _unknown: 0.05078 15:53:36.722 -&gt; forward: 0.00000 15:53:36.722 -&gt; left: 0.10547 15:53:36.722 -&gt; right: 0.01172 15:53:36.722 -&gt; stop: 0.83594 15:53:36.974 -&gt; Predictions (DSP: 195 ms, NN: 15 ms) 15:53:36.974 -&gt; _noise: 0.00000 15:53:36.974 -&gt; _unknown: 0.39844 15:53:36.974 -&gt; forward: 0.00000 15:53:36.974 -&gt; left: 0.05078 15:53:36.974 -&gt; right: 0.07422 15:53:36.974 -&gt; stop: 0.48047 "],["references-.html", "References 參考文獻", " References 參考文獻 參考資料 1. Edge Impulse 說明文件 https://docs.edgeimpulse.com/docs/audio-classification/ 2. Edge Impulse Studio https://studio.edgeimpulse.com/studio/31223/validation "],["appendixa.html", "A Appendix A", " A Appendix A "]]
